# Generated by Django 4.0.4 on 2022-07-05 18:05

import ckeditor_uploader.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('color', models.CharField(default='#0D6EFD', max_length=7, verbose_name='Цвет')),
                ('slug', models.SlugField(unique=True, verbose_name='URL')),
            ],
            options={
                'verbose_name': 'категория',
                'verbose_name_plural': 'Категории',
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название')),
                ('photo', models.ImageField(blank=True, default='course_default.png', null=True, upload_to='', verbose_name='Фотография')),
                ('duration', models.PositiveIntegerField(verbose_name='Длительность (в мес.)')),
                ('short_description', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True, verbose_name='Краткое описание')),
                ('description', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='Описание')),
                ('required_knowledge', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='Необходимые знания')),
                ('after_course', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='После обучения')),
                ('price', models.PositiveIntegerField(blank=True, null=True, verbose_name='Стоимость (в руб.)')),
                ('slug', models.SlugField(unique=True, verbose_name='URL')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='onlineschool.category', verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'курс',
                'verbose_name_plural': 'Курсы',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_bio', models.CharField(max_length=64, verbose_name='Короткая биография/специальность')),
                ('bio', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='Биография')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'преподаватель',
                'verbose_name_plural': 'Преподаватели',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
                ('wishlist', models.ManyToManyField(blank=True, related_name='student_wishlist', to='onlineschool.course', verbose_name='Список желаемого')),
            ],
            options={
                'verbose_name': 'студент',
                'verbose_name_plural': 'Студенты',
            },
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(verbose_name='Дата старта курса')),
                ('end_date', models.DateField(verbose_name='Дата окончания курса')),
                ('is_announced_later', models.BooleanField(verbose_name='Не показывать дату начала курса?')),
                ('slug', models.SlugField(unique=True, verbose_name='URL')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='onlineschool.course', verbose_name='Курс')),
                ('students', models.ManyToManyField(blank=True, null=True, to='onlineschool.student', verbose_name='Студенты')),
            ],
            options={
                'verbose_name': 'расписание',
                'verbose_name_plural': 'Расписание',
                'ordering': ('is_announced_later', 'start_date'),
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)], verbose_name='Оценка')),
                ('text', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='Описание')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='onlineschool.student', verbose_name='Студент')),
            ],
            options={
                'verbose_name': 'отзыв',
                'verbose_name_plural': 'Отзывы',
            },
        ),
        migrations.CreateModel(
            name='RegistrationRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=32, verbose_name='Почта')),
                ('date_created', models.DateField(auto_now_add=True, verbose_name='Дата создания')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='onlineschool.course', verbose_name='Курс')),
                ('student', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='onlineschool.student', verbose_name='Студент')),
            ],
            options={
                'verbose_name': 'заявка на запись',
                'verbose_name_plural': 'Заявки на запись',
            },
        ),
        migrations.CreateModel(
            name='CourseRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=32, verbose_name='Почта')),
                ('date_created', models.DateField(auto_now_add=True, verbose_name='Дата создания')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='onlineschool.course', verbose_name='Курс')),
                ('student', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='onlineschool.student', verbose_name='Студент')),
            ],
            options={
                'verbose_name': 'заявка о старте набора',
                'verbose_name_plural': 'Заявки о старте набора',
            },
        ),
        migrations.AddField(
            model_name='course',
            name='teachers',
            field=models.ManyToManyField(to='onlineschool.teacher', verbose_name='Преподаватели'),
        ),
    ]
